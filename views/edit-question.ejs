<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Quiz Event</title>
    <link rel="stylesheet" href="/css/add-quiz-question.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet" />
    <link rel="icon" type="image/png" sizes="192x192" href="/app-icon-192.png">
</head>

<body>
    <div class="loader-overlay" id="loader">
        <div class="spinner"></div>
    </div>
    <% if (error) { %>
        <div class="quiz-error-message">
            <%= error %>
        </div>
        <% } else { %>
            <div class="quiz-container">
                <nav class="breadcrumbs">
                    <a href="/tvstation/channels">Projects</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/sessions">Episodes</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>">Events</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>/quiz">Quiz</a>
                    <span>&rsaquo;</span>
                    <span class="active">Edit Quiz Event</span>
                </nav>
                <h2>Edit Quiz Event</h2>
                <form id="edit-question-form" enctype="multipart/form-data">
                    <input type="hidden" name="channelId" value="<%= channel._id %>" />
                    <input type="hidden" name="questionId" value="<%= question._id %>" />
                    <input type="hidden" name="sessionId" value="<%= sessionId %>" />
                    <input type="hidden" id="clearedImagesInput" name="clearedImages" />
                    <input type="hidden" id="clearedOptions" name="clearedOptions" />


                    <div class="quiz-question-actions">
                        <button type="button" class="quiz-btn-collapse"
                            onclick="window.open('/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>/quiz-play', '_blank')">
                            Open Quiz
                        </button>
                    </div>

                    <div class="quiz-toggle-wrapper" style="display: none;">
                        <label for="showLogoToggle" class="quiz-toggle-label">Show Logo</label>
                        <label class="quiz-toggle-switch">
                            <input type="checkbox" id="showLogoToggle" name="showLogoSection" value="true"
                                <%=question.showLogoSection ? 'checked' : '' %>>
                            <span class="quiz-toggle-slider"></span>
                        </label>
                    </div>

                    <div class="quiz-form-group">
                        <label>Media Profile</label>
                        <div class="quiz-media-profile-toggles">
                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Broadcaster</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="broadcaster"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('broadcaster') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                                <button type="button" class="quiz-btn-submit" style="margin:2px 0px; padding: 4px 8px;"
                                    id="edit-broadcaster">Edit</button>
                            </div>

                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Project</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="project"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('project') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                                <button type="button" class="quiz-btn-submit" style="margin:2px 0px; padding: 4px 8px;"
                                    id="edit-project">Edit</button>
                            </div>

                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Episode</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="episode"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('episode') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                                <button type="button" class="quiz-btn-submit" style="margin:2px 0px; padding: 4px 8px;"
                                    id="edit-episode">Edit</button>
                            </div>

                            <div class="quiz-toggle-wrapper" style="display: none;">
                                <label class="quiz-toggle-label">Custom</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="custom"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('custom') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <div id="logoParentContainer" style="display: none;">
                        <div class="quiz-form-group">
                            <label>Logo Title </label>
                            <input type="text" name="logoTitle" value="<%= question.logoTitle %>"
                                placeholder="Enter logo title" />
                        </div>

                        <div class="quiz-form-group">
                            <label>Logo Description </label>
                            <input type="text" name="logoDescription" value="<%= question.logoDescription %>"
                                placeholder="Enter logo description" />
                        </div>

                        <div class="quiz-form-group">
                            <label>Logo Link</label>
                            <input type="url" name="logoLink" placeholder="https://example.com"
                                value="<%= question.logoLink %>" />
                        </div>
                        <div class="quiz-form-group">
                            <label>Logo Image </label>
                            <label class="quiz-file-label">
                                <span class="quiz-file-label-text">
                                    <%= question.logo ? question.logo.split('/').pop() : 'Choose File' %>
                                </span>
                                <input type="file" name="logo" class="quiz-logoImage quiz-hidden-file"
                                    accept="image/*" />
                            </label>
                            <% if (question.logo) { %>
                                <img class="preview-img quiz-logoImagePreview" src="<%= question.logo %>"
                                    style="display: block;" />
                                <% } else { %>
                                    <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                    <% } %>
                        </div>
                    </div>
                    <div style="display: none;">
                        <div class="quiz-form-group">
                            <label>Question</label>
                            <input type="text" name="question" value="<%= session?.name || '' %>" />
                        </div>

                        <div class="quiz-form-group">
                            <label>Question Image (optional)</label>
                            <label class="quiz-file-label">
                                <span class="quiz-file-label-text">
                                    <%= question.questionImage ? question.questionImage.split('/').pop() : 'Choose File'
                                        %>
                                </span>
                                <input type="file" name="questionImage" class="quiz-hidden-file" accept="image/*" />
                            </label>
                            <% if (question.questionImage) { %>
                                <img class="preview-img" src="<%= question.questionImage %>" style="display: block;" />
                                <% } else { %>
                                    <img class="preview-img" style="display: none;" />
                                    <% } %>
                        </div>

                        <div class="quiz-form-group">
                            <label>Question Image Link (optional)</label>
                            <input type="url" name="questionImageLink"
                                value="<%= question.questionImageLink || '' %>" />
                        </div>
                    </div>

                    <div class="quiz-option-wrapper">

                        <div id="option-blocks" class="quiz-option-blocks quiz-options-grid">
                            <% question.options.forEach((opt, index)=> { %>
                                <div class="quiz-option-block" data-option-id="<%= opt._id %>">
                                    <label>Option <%= index + 1 %></label>
                                    <input type="text" name="optionTexts[]" value="<%= opt.text %>" required />

                                    <!-- ✅ New: Option Description -->
                                    <input type="text" name="optionDescriptions[]" value="<%= opt.description || '' %>"
                                        placeholder="Enter option description (optional)" />

                                    <label class="quiz-file-label">
                                        <span class="quiz-file-label-text">
                                            <%= opt.image ? opt.image.split('/').pop() : 'Choose Image' %>
                                        </span>
                                        <input type="file" class="quiz-hidden-file option-image-input"
                                            name="optionImages" accept="image/*" />
                                    </label>
                                    <% if (opt.image) { %>
                                        <img class="preview-img" src="<%= opt.image %>" style="display: block;" />
                                        <% } else { %>
                                            <img class="preview-img" style="display: none;" />
                                            <% } %>

                                                <button type="button" class="quiz-option-delete-btn">✕</button>
                                </div>
                                <% }); %>
                        </div>
                        <div class="quiz-option-controls">
                            <button type="button" id="btn-add-option" class="quiz-btn-add-option">+ Add Option</button>
                        </div>
                    </div>

                    <div class="quiz-form-group">
                        <label>Correct Answer</label>
                        <select name="correctAnswerIndex" id="correct-answer-select" required>
                            <option value="">-- Select --</option>
                            <% question.options.forEach((opt, i)=> { %>
                                <option value="<%= i %>" <%=question.correctAnswerIndex===i ? 'selected' : '' %>>Option
                                    <%= i + 1 %>
                                </option>
                                <% }); %>
                        </select>
                    </div>

                    <div class="quiz-form-group">
                        <label>Magic Coins Deducted</label>
                        <input type="number" name="magicCoinDeducted" value="<%= question.magicCoinDeducted %>" min="0"
                            style="display: none;" />
                    </div>

                    <div class="quiz-form-group reward-block">
                        <input type="hidden" name="mode" value="<%= question.mode || 'jackpot' %>">

                        <div class="reward-mode-selector quiz-form-group">
                            <button type="button" class="reward-mode-btn" data-mode="jackpot">Jackpot</button>
                            <button type="button" class="reward-mode-btn" data-mode="digital">Digital</button>
                            <button type="button" class="reward-mode-btn" data-mode="both">Both</button>
                            <button type="button" class="reward-mode-btn" data-mode="none">None</button>
                        </div>

                        <div class="quiz-form-group reward-field reward-jackpot"
                            style="<%= question.mode === 'jackpot' || question.mode === 'both' ? '' : 'display: none;' %>">
                            <label>Jackpot Coin</label>
                            <input type="number" name="jackpotCoinDeducted"
                                value="<%= question.jackpotCoinDeducted != null ? question.jackpotCoinDeducted : '' %>"
                                <% if (question.mode !=='none' && question.mode !=='digital' ) { %> min="10" <% } %> />

                                <label>Jackpot Reward Name</label>
                                <input type="text" class="quiz-form-group" name="jackpotRewardName"
                                    placeholder="Enter Jackpot Reward Name"
                                    value="<%= question.jackpotRewardName || '' %>" />

                                <div class="quiz-form-group">
                                    <label>Jackpot Reward Image</label>
                                    <label class="quiz-file-label">
                                        <span class="quiz-file-label-text">
                                            <%= question.jackpotRewardImage ?
                                                question.jackpotRewardImage.split('/').pop() : 'Choose Image' %>
                                        </span>
                                        <input type="file" name="jackpotRewardImage"
                                            class="quiz-jackpotRewardImage quiz-hidden-file" accept="image/*" />
                                    </label>
                                    <% if (question.jackpotRewardImage) { %>
                                        <img class="preview-img quiz-logoImagePreview"
                                            src="<%= question.jackpotRewardImage %>" style="display: block;" />
                                        <% } else { %>
                                            <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                            <% } %>
                                </div>

                                <label>Jackpot Reward Description</label>
                                <input type="text" name="jackpotRewardDescription" class="quiz-form-group"
                                    placeholder="Enter Jackpot Reward Description"
                                    value="<%= question.jackpotRewardDescription || '' %>" />

                                <label>Jackpot Reward Link</label>
                                <input type="url" name="jackpotRewardLink" class="quiz-form-group"
                                    placeholder="https://example.com" value="<%= question.jackpotRewardLink || '' %>" />
                        </div>

                        <div class="quiz-form-group reward-field reward-digital"
                            style="<%= question.mode === 'digital' || question.mode === 'both' ? '' : 'display: none;' %>">
                            <label>Digital Coin</label>
                            <input type="number" name="digitalCoinDeducted"
                                value="<%= question.digitalCoinDeducted != null ? question.digitalCoinDeducted : '' %>"
                                <% if (question.mode !=='none' && question.mode !=='jackpot' ) { %> min="10" <% } %>/>

                                <label>Digital Reward Name</label>
                                <input type="text" class="quiz-form-group" name="digitalRewardName"
                                    placeholder="Enter Digital Reward Name"
                                    value="<%= question.digitalRewardName || '' %>" />

                                <div class="quiz-form-group">
                                    <label>Digital Reward Image</label>
                                    <label class="quiz-file-label">
                                        <span class="quiz-file-label-text">
                                            <%= question.digitalRewardImage ?
                                                question.digitalRewardImage.split('/').pop() : 'Choose Image' %>
                                        </span>
                                        <input type="file" name="digitalRewardImage"
                                            class="quiz-digitalRewardImage quiz-hidden-file" accept="image/*" />
                                    </label>
                                    <% if (question.digitalRewardImage) { %>
                                        <img class="preview-img quiz-logoImagePreview"
                                            src="<%= question.digitalRewardImage %>" style="display: block;" />
                                        <% } else { %>
                                            <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                            <% } %>
                                </div>


                                <label>Digital Reward Description</label>
                                <input type="text" class="quiz-form-group" name="digitalRewardDescription"
                                    placeholder="Enter Digital Reward Description"
                                    value="<%= question.digitalRewardDescription || '' %>" />

                                <label>Digital Reward Link</label>
                                <input type="url" class="quiz-form-group" name="digitalRewardLink"
                                    placeholder="https://example.com" value="<%= question.digitalRewardLink || '' %>" />
                        </div>

                    </div>
                    <button type="submit" class="quiz-btn-submit">Update Quiz Event</button>
                </form>
            </div>
            <% } %>

                <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
                <script src="/js/toastify-setup.js"></script>
                <script src="/js/edit-quiz-question.js"></script>
</body>

</html>

<!--<script>
    function setupImagePreviewAndClear(fileInput, previewImg, labelTextEl, clearBtn = null, existingImage = false, getClearedKeyFn = null) {
        const originalName = fileInput.name;
        const originalClass = fileInput.className;
        const accept = fileInput.accept;
        const clearedInputField = document.getElementById("clearedImagesInput");

        if (!clearBtn) {
            clearBtn = document.createElement("button");
            clearBtn.type = "button";
            clearBtn.textContent = "✕";
            clearBtn.className = "quiz-clear-btn";
            fileInput.closest(".quiz-file-label").appendChild(clearBtn);
        }

        const showClear = () => clearBtn.style.display = "inline-block";
        const hideClear = () => clearBtn.style.display = "none";
        if (!existingImage) hideClear();

        const attachChangeHandler = (inputEl) => {
            inputEl.addEventListener("change", function () {
                const file = inputEl.files[0];
                if (file) {
                    previewImg.src = URL.createObjectURL(file);
                    previewImg.style.display = "block";
                    labelTextEl.textContent = file.name;
                    showClear();

                    const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
                    clearedInputField.value = current.filter(name => name !== originalName).join(",");
                }
            });
        };

        attachChangeHandler(fileInput);

        clearBtn.addEventListener("click", () => {
            const keyName = getClearedKeyFn ? getClearedKeyFn() : originalName;
            const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
            if (!current.includes(keyName)) {
                current.push(keyName);
                clearedInputField.value = current.join(",");
            }

            const newInput = document.createElement("input");
            newInput.type = "file";
            newInput.className = originalClass;
            newInput.name = originalName;
            newInput.accept = accept;

            const labelContainer = fileInput.closest(".quiz-file-label");
            labelContainer.replaceChild(newInput, fileInput);
            fileInput = newInput;

            previewImg.src = "";
            previewImg.style.display = "none";
            labelTextEl.textContent = "Choose Image";
            hideClear();

            attachChangeHandler(fileInput);
        });
    }

    function renumberOptions() {
        const blocks = document.querySelectorAll(".quiz-option-block");
        const select = document.getElementById("correct-answer-select");
        select.innerHTML = '<option value="">-- Select --</option>';
        blocks.forEach((block, index) => {
            block.querySelector("label").innerText = `Option ${index + 1}`;
            const option = document.createElement("option");
            option.value = index;
            option.innerText = `Option ${index + 1}`;
            select.appendChild(option);
        });
    }

    function initOptionBlock(block) {
        const input = block.querySelector('input[type="file"]');
        const label = block.querySelector(".quiz-file-label-text");
        const img = block.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";

        setupImagePreviewAndClear(
            input,
            img,
            label,
            null,
            hasImage,
            () => block.dataset.optionId || block.dataset.newKey
        );

        const deleteBtn = block.querySelector(".quiz-option-delete-btn");
        deleteBtn?.addEventListener("click", () => {
            const total = document.querySelectorAll(".quiz-option-block").length;
            if (total > 2) {
                const optionId = block.dataset.optionId;
                if (optionId) {
                    const clearedOptionsInput = document.getElementById("clearedOptions");
                    const current = clearedOptionsInput.value ? clearedOptionsInput.value.split(",") : [];
                    if (!current.includes(optionId)) {
                        current.push(optionId);
                        clearedOptionsInput.value = current.join(",");
                    }
                }
                block.remove();
                renumberOptions();
            } else {
                alert("Minimum 2 options required.");
            }
        });
    }

    function addOptionBlock(text = "", imageUrl = "", description = "") {
        const block = document.createElement("div");
        block.className = "quiz-option-block";

        const newKey = `newOption-${Date.now()}`;
        block.dataset.newKey = newKey;

        const index = document.querySelectorAll(".quiz-option-block").length;
        block.innerHTML = `
<label>Option ${index + 1}</label>
<input type="text" name="optionTexts[]" value="${text}" required />
<input type="text" name="optionDescriptions[]" value="${description}" 
       placeholder="Enter option description (optional)" />

<label class="quiz-file-label">
    <span class="quiz-file-label-text">${imageUrl ? imageUrl.split('/').pop() : "Choose Image"}</span>
    <input type="file" name="optionsImages" class="quiz-hidden-file option-image-input" accept="image/*" />
</label>
<img class="preview-img" style="display: ${imageUrl ? 'block' : 'none'};" src="${imageUrl || ''}" />
<button type="button" class="quiz-clear-btn" style="display: ${imageUrl ? 'inline-block' : 'none'};">✕</button>
<button type="button" class="quiz-option-delete-btn">✕</button>
`;

        initOptionBlock(block);
        document.getElementById("option-blocks").appendChild(block);
        renumberOptions();
    }

    function initExistingOptionBlocks() {
        document.querySelectorAll(".quiz-option-block").forEach(initOptionBlock);
    }

    document.getElementById("btn-add-option").addEventListener("click", () => {
        addOptionBlock();
    });

    ["logo", "questionImage", "questionLogo", "jackpotRewardImage", "digitalRewardImage"].forEach(name => {
        const input = document.querySelector(`input[name="${name}"]`);
        const label = input?.closest(".quiz-file-label")?.querySelector(".quiz-file-label-text");
        const img = input?.closest(".quiz-form-group")?.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";
        if (input && label && img) setupImagePreviewAndClear(input, img, label, null, hasImage);
    });

    initExistingOptionBlocks();

    document.getElementById("edit-question-form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const cleared = document.getElementById("clearedImagesInput").value.split(",").filter(Boolean);
        const clearedOptions = document.getElementById("clearedOptions").value.split(",").filter(Boolean);
        const formData = new FormData();

        form.querySelectorAll("input, textarea, select").forEach(el => {
            if (el.type !== "file") formData.append(el.name, el.value);
        });

        // ✅ Include Media Profile explicitly
        const mediaProfileSelect = form.querySelector('.quiz-media-profile-select');
        const logoMediaProfile = mediaProfileSelect?.value || null;
        const showLogoToggle = document.getElementById("showLogoToggle");
        formData.set("showLogoSection", showLogoToggle.checked ? "true" : "false");
        formData.append('logoMediaProfile', logoMediaProfile);

        ["logo", "questionImage", "questionLogo", "jackpotRewardImage", "digitalRewardImage"].forEach(name => {
            const input = form.querySelector(`input[name="${name}"]`);
            const isCleared = cleared.includes(name);
            if (input?.files[0] && !isCleared) {
                formData.append(name, input.files[0]);
            }
        });

        const optionBlocks = document.querySelectorAll(".quiz-option-block");
        const optionsArray = [];

        optionBlocks.forEach((block) => {
            const text = block.querySelector('input[type="text"]').value.trim();
            const description = block.querySelector('input[name="optionDescriptions[]"]').value.trim();
            const fileInput = block.querySelector("input[type='file']");
            const img = block.querySelector("img.preview-img");
            const optionId = block.dataset.optionId || block.dataset.newKey;
            const newFile = fileInput?.files?.[0];
            const isCleared = cleared.includes(optionId);

            optionsArray.push({
                _id: block.dataset.optionId || optionId,
                text,
                description,   // ✅ new field
                imageName: (!newFile && !isCleared && img?.src && !img.src.startsWith("blob:"))
                    ? img.src.split("/").pop()
                    : ""
            });

            if (newFile && !isCleared) {
                formData.append("optionsImages", newFile);
                formData.append("optionIds", optionId);
            }
        });

        formData.append("options", JSON.stringify(optionsArray));
        formData.append("clearedImages", cleared.join(","));

        const loader = document.getElementById("loader");
        loader.style.display = "flex";


        try {
            const response = await fetch("/tvstation/quiz-question/update", {
                method: "POST",
                body: formData,
            });
            const result = await response.json();
            if (result.type === "success") {
                showToast(result.message || "Question updated successfully", "success");
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            } else {
                showToast(result.message || "Update failed", "error");
            }
        } catch (err) {
            console.error(err);
            showToast("Server error", "error");
        } finally {
            loader.style.display = "none";
        }
    });

    function setupRewardModeSwitcher(block) {
        const modeButtons = block.querySelectorAll(".reward-mode-btn");
        const modeInput = block.querySelector('input[name="mode"]');
        const jackpotField = block.querySelector(".reward-jackpot");
        const digitalField = block.querySelector(".reward-digital");
        const currentMode = modeInput?.value || 'jackpot';
        modeButtons.forEach(btn => {
            btn.addEventListener("click", () => {
                const mode = btn.dataset.mode;
                modeInput.value = mode;
                jackpotField.style.display = (mode === 'jackpot' || mode === 'both') ? 'block' : 'none';
                digitalField.style.display = (mode === 'digital' || mode === 'both') ? 'block' : 'none';
                jackpotField.querySelectorAll('input[type="number"]').forEach(el => {
                    if (mode === 'none' || mode === 'digital') {
                        el.required = false;
                        el.removeAttribute('min');
                        el.value = '';
                    } else {
                        el.required = jackpotField.style.display !== 'none';
                        el.setAttribute('min', '10');
                    }
                });

                digitalField.querySelectorAll('input[type="number"]').forEach(el => {
                    if (mode === 'none' || mode === 'jackpot') {
                        el.required = false;
                        el.removeAttribute('min');
                        el.value = '';
                    } else {
                        el.required = digitalField.style.display !== 'none';
                        el.setAttribute('min', '10');
                    }
                });

                modeButtons.forEach(b => b.classList.remove("active"));
                btn.classList.add("active");
            });
            if (btn.dataset.mode === currentMode) btn.classList.add("active");
        });
        jackpotField.style.display = (currentMode === 'jackpot' || currentMode === 'both') ? 'block' : 'none';
        digitalField.style.display = (currentMode === 'digital' || currentMode === 'both') ? 'block' : 'none';
    }




    document.querySelectorAll('.reward-block').forEach(setupRewardModeSwitcher);
    function setupMediaProfileDropdown(block) {
        const select = block.querySelector(".quiz-media-profile-select");
        const logoTitleInput = block.querySelector('input[name="logoTitle"]');
        const logoDescInput = block.querySelector('input[name="logoDescription"]');
        const logoLinkInput = block.querySelector('input[name="logoLink"]');
        const logoImageInput = block.querySelector(".quiz-logoImage");
        const logoImagePreview = block.querySelector(".quiz-logoImagePreview");



        // Hidden input to track existing logo URL
        let existingLogoUrlInput = block.querySelector('input[name="existingLogoUrl"]');
        if (!existingLogoUrlInput) {
            existingLogoUrlInput = document.createElement("input");
            existingLogoUrlInput.type = "hidden";
            existingLogoUrlInput.name = "existingLogoUrl";
            block.appendChild(existingLogoUrlInput);
        }


        const existingClear = logoImageInput.parentElement.querySelector(".quiz-clear-btn");
        if (existingClear) existingClear.remove();

        // Now safely create one clear button
        let clearBtn = document.createElement("button");
        clearBtn.type = "button";
        clearBtn.innerText = "✕";
        clearBtn.className = "quiz-clear-btn quiz-logo-clear-btn";
        logoImageInput.parentElement.appendChild(clearBtn);
        clearBtn.style.display = "none";

        // Show clear button if preview already has image on page load
        if (logoImagePreview && logoImagePreview.src && logoImagePreview.style.display !== "none") {
            clearBtn.style.display = "inline-block";
        }


        clearBtn.addEventListener("click", () => {
            logoImageInput.value = "";
            logoImagePreview.src = "";
            logoImagePreview.style.display = "none";
            existingLogoUrlInput.value = "";
            logoImageInput.previousElementSibling.textContent = "Choose File";
            clearBtn.style.display = "none";
            // 🔥 Mark 'logo' as cleared for backend
            const clearedInput = document.getElementById("clearedImagesInput");
            const clearedList = clearedInput.value ? clearedInput.value.split(",") : [];
            if (!clearedList.includes("logo")) {
                clearedList.push("logo");
                clearedInput.value = clearedList.join(",");
            }
        });

        select.addEventListener("change", async () => {
            const type = select.value;
            if (!type) return;

            const loader = document.getElementById("loader");
            if (loader) loader.style.display = "flex";

            try {
                const res = await fetch(`/tvstation/get-media-profile?type=${type}`);
                const data = await res.json();

                if (data.type === "success") {
                    const profile = data.profile;

                    if (profile.logo) {
                        // Profile has an image: override any attached file
                        logoImagePreview.src = profile.logo;
                        logoImagePreview.style.display = "block";
                        existingLogoUrlInput.value = profile.logo;
                        clearBtn.style.display = "inline-block";
                        logoImageInput.previousElementSibling.textContent =
                            profile.logo.split("/").pop() || "Current File";
                        logoImageInput.value = "";  // clear attached file
                    } else {
                        // Profile has no image
                        if (!logoImageInput.files[0]) {
                            // Only clear preview if no file attached by user
                            logoImagePreview.src = "";
                            logoImagePreview.style.display = "none";
                            existingLogoUrlInput.value = "";
                            clearBtn.style.display = "none";
                            logoImageInput.previousElementSibling.textContent = "Choose File";
                        }
                        // If user attached file, leave it selected
                    }

                    // Update title, description, link
                    logoTitleInput.value = profile.title || "";
                    logoDescInput.value = profile.description || "";
                    logoLinkInput.value = profile.link || "";
                }
                else {
                    alert(data.message || "Failed to load media profile");
                }
            } catch (err) {
                console.error("Error fetching media profile:", err);
                alert("Error fetching media profile");
            } finally {
                if (loader) loader.style.display = "none";
            }
        });
    }

    // Call it immediately for your form container
    setupMediaProfileDropdown(document.querySelector(".quiz-container"));
</script>-->