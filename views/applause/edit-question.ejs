<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Applause Session</title>
    <link rel="stylesheet" href="/css/add-quiz-question.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet" />
    <link rel="icon" type="image/png" sizes="192x192" href="/app-icon-192.png">
</head>

<body>
    <div class="loader-overlay" id="loader">
        <div class="spinner"></div>
    </div>
    <% if (error) { %>
        <div class="quiz-error-message">
            <%= error %>
        </div>
        <% } else { %>
            <div class="quiz-container">
                <nav class="breadcrumbs">
                    <a href="/tvstation/channels">Projects</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/sessions">Episodes</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>">Events</a>
                    <span>&rsaquo;</span>
                    <a
                        href="/tvstation/applause/channels/<%= channel._id %>/session/<%= sessionId %>/applause">Applause</a>
                    <span>&rsaquo;</span>
                    <span class="active">Edit Applause Event</span>
                </nav>
                <h2>Edit Applause Event</h2>
                <form id="edit-question-form" enctype="multipart/form-data">
                    <input type="hidden" name="channelId" value="<%= channel._id %>" />
                    <input type="hidden" name="questionId" value="<%= question._id %>" />
                    <input type="hidden" name="sessionId" value="<%= sessionId %>" />
                    <input type="hidden" id="clearedImagesInput" name="clearedImages" />
                    <input type="hidden" id="clearedOptions" name="clearedOptions" />

                    <div class="quiz-question-actions">
                        <button type="button" class="quiz-btn-collapse"
                            onclick="window.open('/tvstation/applause/channels/<%= channel._id %>/session/<%= sessionId %>/applause-play', '_blank')">
                            Open Applause
                        </button>
                    </div>

                    <div class="quiz-form-group">
                        <label>Media Profile</label>
                        <div class="quiz-media-profile-toggles">
                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Broadcaster</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="broadcaster"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('broadcaster') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                            </div>

                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Project</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="project"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('project') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                            </div>

                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Episode</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="episode"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('episode') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                            </div>

                            <div class="quiz-toggle-wrapper">
                                <label class="quiz-toggle-label">Custom</label>
                                <label class="quiz-toggle-switch">
                                    <input type="checkbox" name="logoMediaProfile[]" value="custom"
                                        <%=Array.isArray(question.logoMediaProfile) &&
                                        question.logoMediaProfile.includes('custom') ? 'checked' : '' %> />
                                    <span class="quiz-toggle-slider"></span>
                                </label>
                            </div>
                        </div>
                    </div>

                    <div id="logoParentContainer" style="<%= Array.isArray(question.logoMediaProfile) && question.logoMediaProfile.includes('custom') 
       ? '' 
       : 'display: none;' %>">
                        <div class="quiz-form-group">
                            <label>Name of Your Channel </label>
                            <input type="text" name="logoTitle" value="<%= question.logoTitle %>"
                                placeholder="Enter logo title" />
                        </div>

                        <div class="quiz-form-group">
                            <label>Description of Your Channel Logo </label>
                            <input type="text" name="logoDescription" value="<%= question.logoDescription %>"
                                placeholder="Enter logo description" />
                        </div>

                        <div class="quiz-form-group">
                            <label>Logo Link</label>
                            <input type="url" name="logoLink" placeholder="https://example.com"
                                value="<%= question.logoLink %>" />
                        </div>
                        <div class="quiz-form-group">
                            <label>Upload Your Channel Logo </label>
                            <label class="quiz-file-label">
                                <span class="quiz-file-label-text">
                                    <%= question.logo ? question.logo.split('/').pop() : 'Choose File' %>
                                </span>
                                <input type="file" name="logo" class="quiz-logoImage quiz-hidden-file"
                                    accept="image/*" />
                            </label>
                            <% if (question.logo) { %>
                                <img class="preview-img quiz-logoImagePreview" src="<%= question.logo %>"
                                    style="display: block;" />
                                <% } else { %>
                                    <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                    <% } %>
                        </div>
                    </div>
                    <div class="quiz-form-group">
                        <label>Name of The Episode</label>
                        <input type="text" name="question" placeholder="Name of The Episode" value="<%= question.question %>" required />
                    </div>

                    <div class="quiz-form-group">
                            <label>Description of The Episode</label>
                            <input type="text" name="questionDescription"
                                value="<%= question.questionDescription || '' %>"
                                placeholder="Description of The Episode" />
                    </div>

                    <div class="quiz-form-group">
                        <label>Upload Image (Preview) of The Episode</label>
                        <label class="quiz-file-label">
                            <span class="quiz-file-label-text">
                                <%= question.questionImage ? question.questionImage.split('/').pop() : 'Choose File' %>
                            </span>
                            <input type="file" name="questionImage" class="quiz-hidden-file" accept="image/*" />
                        </label>
                        <% if (question.questionImage) { %>
                            <img class="preview-img" src="<%= question.questionImage %>" style="display: block;" />
                            <% } else { %>
                                <img class="preview-img" style="display: none;" />
                                <% } %>
                    </div>

                    <div class="quiz-form-group">
                        <label>Link of The Episode</label>
                        <input type="url" name="questionImageLink" value="<%= question.questionImageLink || '' %>" />
                    </div>
                    <div class="quiz-option-wrapper">



                        <div id="option-blocks" class="quiz-option-blocks quiz-options-grid">
                            <% question.options.forEach((opt, index)=> { %>
                                <div class="quiz-option-block" data-option-id="<%= opt._id %>">
                                    <label>Content Option <%= index + 1 %></label>

                                    <label class="quiz-file-label">
                                        <span class="quiz-file-label-text">
                                            <%= opt.image ? opt.image.split('/').pop() : 'Choose Image' %>
                                        </span>
                                        <input type="file" class="quiz-hidden-file option-image-input"
                                            name="optionImages" accept="image/*" />
                                    </label>
                                    <% if (opt.image) { %>
                                        <img class="preview-img" src="<%= opt.image %>" style="display: block;" />
                                        <% } else { %>
                                            <img class="preview-img" style="display: none;" />
                                            <% } %>

                                                <button type="button" class="quiz-option-delete-btn">✕</button>


                                                <input type="text" name="optionTexts[]" value="<%= opt.text %>"
                                                    placeholder="Name of the Image (of the post, video, story, specific guest, any special detail - like the sound, etc.)"
                                                    required />

                                                <!-- ✅ New: Option Description -->
                                                <input type="text" name="optionDescriptions[]"
                                                    value="<%= opt.description || '' %>"
                                                    placeholder="Enter the Description of the Image" />

                                                <!-- Option Magic Coin Deducted -->
                                                <input type="number" name="optionMagicCoins[]" min="0"
                                                    value="<%= opt.magicCoinDeducted || 0 %>"
                                                    placeholder="Select Your Desired Amount for Your Applause, or Your Fans their free Choice"
                                                    required />


                                </div>
                                <% }); %>
                        </div>
                        <div class="quiz-option-controls">
                            <button type="button" id="btn-add-option" class="quiz-btn-add-option">+ Add
                                Option</button>
                        </div>
                    </div>
                    <button type="submit" class="quiz-btn-submit">Edit Your Applause Event</button>
                </form>
            </div>
            <% } %>


</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
<script src="/js/toastify-setup.js"></script>
<script src="/js/applause-edit-question.js"></script>

<!-- <script>
    function setupImagePreviewAndClear(fileInput, previewImg, labelTextEl, clearBtn = null, existingImage = false, getClearedKeyFn = null) {
        const originalName = fileInput.name;
        const originalClass = fileInput.className;
        const accept = fileInput.accept;
        const clearedInputField = document.getElementById("clearedImagesInput");

        if (!clearBtn) {
            clearBtn = document.createElement("button");
            clearBtn.type = "button";
            clearBtn.textContent = "✕";
            clearBtn.className = "quiz-clear-btn";
            fileInput.closest(".quiz-file-label").appendChild(clearBtn);
        }

        const showClear = () => clearBtn.style.display = "inline-block";
        const hideClear = () => clearBtn.style.display = "none";
        if (!existingImage) hideClear();

        const attachChangeHandler = (inputEl) => {
            inputEl.addEventListener("change", function () {
                const file = inputEl.files[0];
                if (file) {
                    previewImg.src = URL.createObjectURL(file);
                    previewImg.style.display = "block";
                    labelTextEl.textContent = file.name;
                    showClear();

                    const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
                    clearedInputField.value = current.filter(name => name !== originalName).join(",");
                }
            });
        };

        attachChangeHandler(fileInput);

        clearBtn.addEventListener("click", () => {
            const keyName = getClearedKeyFn ? getClearedKeyFn() : originalName;
            const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
            if (!current.includes(keyName)) {
                current.push(keyName);
                clearedInputField.value = current.join(",");
            }

            const newInput = document.createElement("input");
            newInput.type = "file";
            newInput.className = originalClass;
            newInput.name = originalName;
            newInput.accept = accept;

            const labelContainer = fileInput.closest(".quiz-file-label");
            labelContainer.replaceChild(newInput, fileInput);
            fileInput = newInput;

            previewImg.src = "";
            previewImg.style.display = "none";
            labelTextEl.textContent = "Choose Image";
            hideClear();

            attachChangeHandler(fileInput);
        });
    }

    function renumberOptions() {
        const blocks = document.querySelectorAll(".quiz-option-block");
        const select = document.getElementById("correct-answer-select");
        select.innerHTML = '<option value="">-- Select --</option>';
        blocks.forEach((block, index) => {
            block.querySelector("label").innerText = `Content Option ${index + 1}`;
            const option = document.createElement("option");
            option.value = index;
            option.innerText = `Content Option ${index + 1}`;
            select.appendChild(option);
        });
    }

    function initOptionBlock(block) {
        const input = block.querySelector('input[type="file"]');
        const label = block.querySelector(".quiz-file-label-text");
        const img = block.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";

        setupImagePreviewAndClear(
            input,
            img,
            label,
            null,
            hasImage,
            () => block.dataset.optionId || block.dataset.newKey
        );

        const deleteBtn = block.querySelector(".quiz-option-delete-btn");
        deleteBtn?.addEventListener("click", () => {
            const total = document.querySelectorAll(".quiz-option-block").length;
            if (total > 1) {
                const optionId = block.dataset.optionId;
                if (optionId) {
                    const clearedOptionsInput = document.getElementById("clearedOptions");
                    const current = clearedOptionsInput.value ? clearedOptionsInput.value.split(",") : [];
                    if (!current.includes(optionId)) {
                        current.push(optionId);
                        clearedOptionsInput.value = current.join(",");
                    }
                }
                block.remove();
                renumberOptions();
            } else {
                alert("Minimum 2 options required.");
            }
        });
    }

    function addOptionBlock(text = "", imageUrl = "", description = "", magicCoins = 0) {
        const block = document.createElement("div");
        block.className = "quiz-option-block";

        const newKey = `newOption-${Date.now()}`;
        block.dataset.newKey = newKey;

        const index = document.querySelectorAll(".quiz-option-block").length;
        block.innerHTML = `
<label>Content Option ${index + 1}</label>

<label class="quiz-file-label">
    <span class="quiz-file-label-text">${imageUrl ? imageUrl.split('/').pop() : "Choose Image"}</span>
    <input type="file" name="optionsImages" class="quiz-hidden-file option-image-input" accept="image/*" />
</label>
<img class="preview-img" style="display: ${imageUrl ? 'block' : 'none'};" src="${imageUrl || ''}" />
<button type="button" class="quiz-clear-btn" style="display: ${imageUrl ? 'inline-block' : 'none'};">✕</button>
<button type="button" class="quiz-option-delete-btn">✕</button>

<input type="text" name="optionTexts[]" value="${text}" placeholder="Name of the Image (of the post, video, story, specific guest, any special detail - like the sound, etc.)" required />
 ✅ New
<input type="text" name="optionDescriptions[]" value="${description}" 
       placeholder="Enter the Description of the Image" />
       <input type="number" name="optionMagicCoins[]" min="0" value="" placeholder="Select Your Desired Amount for Your Applause, or Your Fans their free Choice" required />

`;

        initOptionBlock(block);
        document.getElementById("option-blocks").appendChild(block);
        renumberOptions();
    }

    function initExistingOptionBlocks() {
        document.querySelectorAll(".quiz-option-block").forEach(initOptionBlock);
    }

    document.getElementById("btn-add-option").addEventListener("click", () => {
        addOptionBlock();
    });

    ["logo", "questionImage", "questionLogo"].forEach(name => {
        const input = document.querySelector(`input[name="${name}"]`);
        const label = input?.closest(".quiz-file-label")?.querySelector(".quiz-file-label-text");
        const img = input?.closest(".quiz-form-group")?.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";
        if (input && label && img) setupImagePreviewAndClear(input, img, label, null, hasImage);
    });

    initExistingOptionBlocks();

    document.getElementById("edit-question-form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const cleared = document.getElementById("clearedImagesInput").value.split(",").filter(Boolean);
        const clearedOptions = document.getElementById("clearedOptions").value.split(",").filter(Boolean);
        const formData = new FormData();

        form.querySelectorAll("input, textarea, select").forEach(el => {
            if (el.type !== "file") formData.append(el.name, el.value);
        });

        ["logo", "questionImage", "questionLogo"].forEach(name => {
            const input = form.querySelector(`input[name="${name}"]`);
            const isCleared = cleared.includes(name);
            if (input?.files[0] && !isCleared) {
                formData.append(name, input.files[0]);
            }
        });

        const optionBlocks = document.querySelectorAll(".quiz-option-block");
        const optionsArray = [];

        optionBlocks.forEach((block) => {
            const text = block.querySelector('input[type="text"]').value.trim();
            const description = block.querySelector('input[name="optionDescriptions[]"]').value.trim();
            const magicCoins = block.querySelector('input[name="optionMagicCoins[]"]').value || 0;
            const fileInput = block.querySelector("input[type='file']");
            const img = block.querySelector("img.preview-img");
            const optionId = block.dataset.optionId || block.dataset.newKey;
            const newFile = fileInput?.files?.[0];
            const isCleared = cleared.includes(optionId);

            optionsArray.push({
                _id: block.dataset.optionId || optionId,
                text,
                description,
                magicCoinDeducted: parseInt(magicCoins, 10), // ✅ ADD THIS
                imageName: (!newFile && !isCleared && img?.src && !img.src.startsWith("blob:"))
                    ? img.src.split("/").pop()
                    : ""
            });

            if (newFile && !isCleared) {
                formData.append("optionsImages", newFile);
                formData.append("optionIds", optionId);
            }
        });

        formData.append("options", JSON.stringify(optionsArray));
        formData.append("clearedImages", cleared.join(","));

        const loader = document.getElementById("loader");
        loader.style.display = "flex";

        try {
            const response = await fetch("/tvstation/applause/applause-question/update", {
                method: "POST",
                body: formData,
            });
            const result = await response.json();
            if (result.type === "success") {
                showToast(result.message || "Question updated successfully", "success");
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            } else {
                showToast(result.message || "Update failed", "error");
            }
        } catch (err) {
            console.error(err);
            showToast("Server error", "error");
        } finally {
            loader.style.display = "none";
        }
    });
</script> -->






</html>