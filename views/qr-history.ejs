<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern List View</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
</head>

<body>
    <%- include('../components/navbar') %>

        <div class="modern-list-container">
            <h2>Magic Code Track History</h2>

            <% if (type==='error' && message) { %>
                <div class="error-box">
                    <p style="color: red;">
                        <%= message %>
                    </p>
                </div>
                <% } else if (histories && histories.length> 0) { %>
                    <div class="list-wrapper">
                        <div class="list-header" id="list-header-history">
                            <span>Qr Name</span>
                            <span>Type</span>
                            <span>Content</span>
                            <span>Modified At</span>
                        </div>

                        <ul id="userList" class="user-list">
                            <% histories.forEach(function(item) { function formatDate(dateStr) { const d=new
                                Date(dateStr); if (isNaN(d)) return "Invalid Date" ; const
                                day=d.getDate().toString().padStart(2, '0' ); const month=(d.getMonth() +
                                1).toString().padStart(2, '0' ); const year=d.getFullYear(); let hours=d.getHours();
                                const minutes=d.getMinutes().toString().padStart(2, '0' ); const ampm=hours>= 12 ? 'PM'
                                : 'AM';
                                hours = hours % 12 || 12;

                                return `${day}/${month}/${year} ${hours}:${minutes} ${ampm}`;
                                }
                                %>
                                <li class="user-item" id="qr-history-item">
                                    <span>
                                        <span class="magic-history-badge">
                                            <%= item.qrCodeId?.qrName || "-" %>
                                        </span>
                                    </span>

                                    <span>
                                        <span class="magic-history-badge">
                                            <%= item.change?.newType || "Note" %>
                                        </span>
                                    </span>
                                    <span>
                                        <% if (item.change?.newType==='url' ) { %>
                                            <a href="<%= item.change.contentValue %>" class="track-history-link" target="_blank"
                                                rel="noopener noreferrer">
                                                <%= item.change.contentValue %>
                                            </a>
                                            <% } else { %>
                                                <%= item.change?.contentValue || "-" %>
                                                    <% } %>
                                    </span>
                                    <span>
                                        <%= formatDate(item.createdAt) %>
                                    </span>
                                </li>
                                <% }); %>
                        </ul>
                    </div>

                    <% if (hasMore) { %>
                        <button id="loadMoreBtn" class="view-qr-btn" style="margin-top: 20px;" data-skip="<%= skip %>"
                            data-limit="5">
                            <span class="load-text">Load More</span>
                            <span class="spinner" style="display: none; margin-left: 8px;">
                                <i class="fas fa-spinner fa-spin"></i>
                            </span>
                        </button>
                        <% } %>
                            <% } else { %>
                                <p style="text-align: center; font-size: 18px; margin-top: 30px;">
                                    No history available.
                                </p>
                                <% } %>
        </div>

        <div class="fullscreen-loader">
            <div class="loader"></div>
            <p class="animated-text">Please wait<span>.</span><span>.</span><span>.</span></p>
        </div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
<script src="/js/toastify-setup.js"></script>

<script>
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    const userList = document.getElementById('userList');

    if (loadMoreBtn) {
        const loadText = loadMoreBtn.querySelector('.load-text');
        const spinner = loadMoreBtn.querySelector('.spinner');

        loadMoreBtn.addEventListener('click', async (e) => {
            e.preventDefault(); // Prevent page reload

            const skip = parseInt(loadMoreBtn.getAttribute('data-skip')) || 0;
            const limit = parseInt(loadMoreBtn.getAttribute('data-limit')) || 5;
            const qrCodeId = '<%= qrCodeId %>';

            // Show loading spinner
            loadText.style.display = 'none';
            spinner.style.display = 'inline-block';

            try {
                const res = await fetch(`/qrhistory/${qrCodeId}?skip=${skip}&limit=${limit}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                // Check for non-successful response
                if (!res.ok) {
                    const errData = await res.json();
                    showToast(errData.message, "error" || "Failed to load more data.");
                    return;
                }

                const data = await res.json();

                if (data.type === 'error' && data.message) {
                    showToast(data.message, "error");
                    return;
                }

                if (data.histories && data.histories.length > 0) {
                    data.histories.forEach(item => {
                        const li = document.createElement('li');
                        li.className = 'user-item';
                        li.id = 'qr-history-item';
                        const createdAt = new Date(item.createdAt);
                        const options = {
                            day: '2-digit', month: '2-digit', year: 'numeric',
                            hour: '2-digit', minute: '2-digit', hour12: true
                        };
                        li.innerHTML = `
                        <span>
        <span class="magic-history-badge"> ${item.qrCodeId?.qrName || "NA"}</span> 
    </span>
    <span>
        <span class="magic-history-badge"> ${item.change?.newType || "Note"}</span> 
    </span>
    <span>${item.change?.contentValue || "-"}</span>
    <span>${createdAt.toLocaleString('en-GB', options)}</span>
`;
                        userList.appendChild(li);
                    });

                    loadMoreBtn.setAttribute('data-skip', skip + limit);

                    if (!data.hasMore) {
                        loadMoreBtn.style.display = 'none';
                    }
                } else {
                    loadMoreBtn.style.display = 'none';
                }

            } catch (error) {
                console.error("Error fetching more data:", error);
                showToast(error.message, "error");
            } finally {
                loadText.style.display = 'inline';
                spinner.style.display = 'none';
            }
        });
    }
</script>



</html>