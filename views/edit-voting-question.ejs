<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Voting Question</title>
    <link rel="stylesheet" href="/css/add-quiz-question.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet" />
    <link rel="icon" type="image/png" sizes="192x192" href="/app-icon-192.png">
</head>

<body>
    <div class="loader-overlay" id="loader">
        <div class="spinner"></div>
    </div>
    <% if (error) { %>
        <div class="quiz-error-message">
            <%= error %>
        </div>
        <% } else { %>
            <div class="quiz-container">
                <nav class="breadcrumbs">
                    <a href="/tvstation/channels">Shows</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/sessions">Session Manager</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>">Apps</a>
                    <span>&rsaquo;</span>
                    <a href="/tvstation/channels/<%= channel._id %>/session/<%= sessionId %>/voting">Voting</a>
                    <span>&rsaquo;</span>
                    <span class="active">Edit Voting Question</span>
                </nav>
                <h2>Edit Voting Question</h2>
                <form id="edit-question-form" enctype="multipart/form-data">
                    <input type="hidden" name="channelId" value="<%= channel._id %>" />
                    <input type="hidden" name="questionId" value="<%= question._id %>" />
                    <input type="hidden" name="sessionId" value="<%= sessionId %>" />
                    <input type="hidden" id="clearedImagesInput" name="clearedImages" />
                    <input type="hidden" id="clearedOptions" name="clearedOptions" value="">



                    <div class="quiz-form-group">
                        <label>Logo Title <span style="color: red;">*</span></label>
                        <input type="text" name="logoTitle" value="<%= question.logoTitle %>"
                            placeholder="Enter logo title" required />
                    </div>

                    <div class="quiz-form-group">
                        <label>Logo Description <span style="color: red;">*</span></label>
                        <input type="text" name="logoDescription" value="<%= question.logoDescription %>"
                            placeholder="Enter logo description" required />
                    </div>

                    <div class="quiz-form-group">
                        <label>Logo Link <span style="color: red;">*</span></label>
                        <input type="url" name="logoLink" placeholder="https://example.com"
                            value="<%= question.logoLink %>" required />
                    </div>
                    <div class="quiz-form-group">
                        <label>Logo Image <span style="color: red;">*</span></label>
                        <label class="quiz-file-label">
                            <span class="quiz-file-label-text">
                                <%= question.logo ? question.logo.split('/').pop() : 'Choose File' %>
                            </span>
                            <input type="file" name="logo" class="quiz-logoImage quiz-hidden-file" accept="image/*" />
                        </label>
                        <% if (question.logo) { %>
                            <img class="preview-img quiz-logoImagePreview" src="<%= question.logo %>"
                                style="display: block;" />
                            <% } else { %>
                                <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                <% } %>
                    </div>
                    <div class="quiz-form-group">
                        <label>Voting Question</label>
                        <input type="text" name="question" value="<%= question.question %>"
                            placeholder="Enter voting question" required />
                    </div>

                    <div class="quiz-form-group">
                        <label>Question Image (optional)</label>
                        <label class="quiz-file-label">
                            <span class="quiz-file-label-text">
                                <%= question.questionImage ? question.questionImage.split('/').pop() : 'Choose File' %>
                            </span>
                            <input type="file" name="questionImage" class="quiz-hidden-file" accept="image/*" />
                        </label>
                        <% if (question.questionImage) { %>
                            <img class="preview-img" src="<%= question.questionImage %>" style="display: block;" />
                            <% } else { %>
                                <img class="preview-img" style="display: none;" />
                                <% } %>
                    </div>

                    <div class="quiz-form-group">
                        <label>Question Image Link (optional)</label>
                        <input type="url" name="questionImageLink" value="<%= question.questionImageLink || '' %>"
                            placeholder="https://example.com" />
                    </div>

                    <div class="quiz-option-wrapper">
                        <div class="quiz-option-controls">
                            <button type="button" id="btn-add-option" class="quiz-btn-add-option">+ Add Option</button>
                        </div>
                        <div id="option-blocks" class="quiz-option-blocks quiz-options-grid">
                            <% question.options.forEach((opt, index)=> {
                                // Generate a stable unique ID for each option
                                const optionId = opt._id || `option-${Date.now()}-${index}`;
                                %>
                                <div class="quiz-option-block" data-option-id="<%= optionId %>">
                                    <label>Option <%= index + 1 %></label>
                                    <input type="text" name="optionTexts[]" value="<%= opt.text %>" required />

                                    <label class="quiz-file-label">
                                        <span class="quiz-file-label-text">
                                            <%= opt.image ? opt.image.split('/').pop() : 'Choose Image' %>
                                        </span>
                                        <input type="file" class="quiz-hidden-file option-image-input"
                                            name="optionImages" accept="image/*" />
                                    </label>

                                    <% if (opt.image) { %>
                                        <img class="preview-img" src="<%= opt.image %>" style="display: block;" />
                                        <% } else { %>
                                            <img class="preview-img" style="display: none;" />
                                            <% } %>

                                                <button type="button" class="quiz-option-delete-btn">âœ•</button>
                                </div>
                                <% }); %>
                        </div>

                    </div>


                    <div class="quiz-form-group" style="display: none;">
                        <label>Magic Coins Deducted</label>
                        <input type="number" name="magicCoinDeducted" value="<%= question.magicCoinDeducted %>"
                            min="0" />
                    </div>

                    <div class="quiz-form-group reward-block">
                        <input type="hidden" name="mode" value="<%= question.mode || 'jackpot' %>">

                        <div class="reward-mode-selector quiz-form-group">
                            <button type="button" class="reward-mode-btn" data-mode="jackpot">Jackpot</button>
                            <button type="button" class="reward-mode-btn" data-mode="digital">Digital</button>
                            <button type="button" class="reward-mode-btn" data-mode="both">Both</button>
                            <button type="button" class="reward-mode-btn" data-mode="none">None</button>
                        </div>

                        <div class="quiz-form-group reward-field reward-jackpot"
                            style="<%= question.mode === 'jackpot' || question.mode === 'both' ? '' : 'display: none;' %>">
                            <label>Jackpot Coin</label>
                            <input type="number" class="quiz-form-group" name="jackpotCoinDeducted" min="0"
                                value="<%= question.jackpotCoinDeducted != null ? question.jackpotCoinDeducted : '' %>" />

                            <label>Jackpot Reward Name</label>
                            <input type="text" class="quiz-form-group" name="jackpotRewardName"
                                placeholder="Enter Jackpot Reward Name"
                                value="<%= question.jackpotRewardName || '' %>" />

                            <div class="quiz-form-group">
                                <label>Jackpot Reward Image</label>
                                <label class="quiz-file-label">
                                    <span class="quiz-file-label-text">
                                        <%= question.jackpotRewardImage ? question.jackpotRewardImage.split('/').pop()
                                            : 'Choose Image' %>
                                    </span>
                                    <input type="file" name="jackpotRewardImage"
                                        class="quiz-jackpotRewardImage quiz-hidden-file" accept="image/*" />
                                </label>
                                <% if (question.jackpotRewardImage) { %>
                                    <img class="preview-img quiz-logoImagePreview"
                                        src="<%= question.jackpotRewardImage %>" style="display: block;" />
                                    <% } else { %>
                                        <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                        <% } %>
                            </div>

                            <label>Jackpot Reward Description</label>
                            <input type="text" name="jackpotRewardDescription" class="quiz-form-group"
                                placeholder="Enter Jackpot Reward Description"
                                value="<%= question.jackpotRewardDescription || '' %>" />

                            <label>Jackpot Reward Link</label>
                            <input type="url" name="jackpotRewardLink" class="quiz-form-group"
                                placeholder="https://example.com" value="<%= question.jackpotRewardLink || '' %>" />
                        </div>

                        <div class="quiz-form-group reward-field reward-digital"
                            style="<%= question.mode === 'digital' || question.mode === 'both' ? '' : 'display: none;' %>">
                            <label>Digital Coin</label>
                            <input type="number" class="quiz-form-group" name="digitalCoinDeducted" min="0"
                                value="<%= question.digitalCoinDeducted != null ? question.digitalCoinDeducted : '' %>" />

                            <label>Digital Reward Name</label>
                            <input type="text" class="quiz-form-group" name="digitalRewardName"
                                placeholder="Enter Digital Reward Name"
                                value="<%= question.digitalRewardName || '' %>" />

                            <div class="quiz-form-group">
                                <label>Digital Reward Image</label>
                                <label class="quiz-file-label">
                                    <span class="quiz-file-label-text">
                                        <%= question.digitalRewardImage ? question.digitalRewardImage.split('/').pop()
                                            : 'Choose Image' %>
                                    </span>
                                    <input type="file" name="digitalRewardImage"
                                        class="quiz-digitalRewardImage quiz-hidden-file" accept="image/*" />
                                </label>
                                <% if (question.digitalRewardImage) { %>
                                    <img class="preview-img quiz-logoImagePreview"
                                        src="<%= question.digitalRewardImage %>" style="display: block;" />
                                    <% } else { %>
                                        <img class="preview-img quiz-logoImagePreview" style="display: none;" />
                                        <% } %>
                            </div>

                            <label>Digital Reward Description</label>
                            <input type="text" class="quiz-form-group" name="digitalRewardDescription"
                                placeholder="Enter Digital Reward Description"
                                value="<%= question.digitalRewardDescription || '' %>" />

                            <label>Digital Reward Link</label>
                            <input type="url" class="quiz-form-group" name="digitalRewardLink"
                                placeholder="https://example.com" value="<%= question.digitalRewardLink || '' %>" />
                        </div>

                    </div>
                    <button type="submit" class="quiz-btn-submit">Update Question</button>
                </form>
            </div>
            <% } %>

                <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
                <script src="/js/toastify-setup.js"></script>
</body>

<script>
    function setupImagePreviewAndClear(fileInput, previewImg, labelTextEl, clearBtn = null, existingImage = false, getClearedKeyFn = null) {
        const originalName = fileInput.name;
        const originalClass = fileInput.className;
        const accept = fileInput.accept;
        const clearedInputField = document.getElementById("clearedImagesInput");

        if (!clearBtn) {
            clearBtn = document.createElement("button");
            clearBtn.type = "button";
            clearBtn.textContent = "âœ•";
            clearBtn.className = "quiz-clear-btn";
            fileInput.closest(".quiz-file-label").appendChild(clearBtn);
        }

        const showClear = () => clearBtn.style.display = "inline-block";
        const hideClear = () => clearBtn.style.display = "none";
        if (!existingImage) hideClear();

        const attachChangeHandler = (inputEl) => {
            inputEl.addEventListener("change", function () {
                const file = inputEl.files[0];
                if (file) {
                    previewImg.src = URL.createObjectURL(file);
                    previewImg.style.display = "block";
                    labelTextEl.textContent = file.name;
                    showClear();

                    const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
                    clearedInputField.value = current.filter(name => name !== originalName).join(",");
                }
            });
        };

        attachChangeHandler(fileInput);

        clearBtn.addEventListener("click", () => {
            const keyName = getClearedKeyFn ? getClearedKeyFn() : originalName;
            const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
            if (!current.includes(keyName)) {
                current.push(keyName);
                clearedInputField.value = current.join(",");
            }

            const newInput = document.createElement("input");
            newInput.type = "file";
            newInput.className = originalClass;
            newInput.name = originalName;
            newInput.accept = accept;

            const labelContainer = fileInput.closest(".quiz-file-label");
            labelContainer.replaceChild(newInput, fileInput);
            fileInput = newInput;

            previewImg.src = "";
            previewImg.style.display = "none";
            labelTextEl.textContent = "Choose Image";
            hideClear();

            attachChangeHandler(fileInput);
        });
    }

    function renumberOptions() {
        document.querySelectorAll(".quiz-option-block").forEach((block, index) => {
            block.querySelector("label").innerText = `Option ${index + 1}`;
        });
    }

    function initOptionBlock(block) {
        if (!block.dataset.optionId) block.dataset.optionId = `option-${Date.now()}-${Math.floor(Math.random() * 1000)}`;
        const optionId = block.dataset.optionId;

        const input = block.querySelector('input[type="file"]');
        const label = block.querySelector(".quiz-file-label-text");
        const img = block.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";

        setupImagePreviewAndClear(input, img, label, null, hasImage, () => `optionImage-${optionId}`);

        const deleteBtn = block.querySelector(".quiz-option-delete-btn");
        deleteBtn?.addEventListener("click", () => {
            const total = document.querySelectorAll(".quiz-option-block").length;
            if (total > 2) {
                const clearedInputField = document.getElementById("clearedImagesInput");
                const current = clearedInputField.value ? clearedInputField.value.split(",") : [];
                const keyName = `optionImage-${optionId}`;
                if (!current.includes(keyName)) current.push(keyName);
                clearedInputField.value = current.join(",");

                // --- Minimal change ---
                const clearedOptionsField = document.getElementById("clearedOptions");
                const clearedOptions = clearedOptionsField.value ? clearedOptionsField.value.split(",") : [];
                clearedOptions.push(optionId);
                clearedOptionsField.value = clearedOptions.join(",");

                block.remove();
                renumberOptions();
            } else {
                alert("Minimum 2 options required.");
            }
        });

    }

    function addOptionBlock(text = "", imageUrl = "", optionId = null) {
        const block = document.createElement("div");
        block.className = "quiz-option-block";
        block.dataset.optionId = optionId || `option-${Date.now()}-${Math.floor(Math.random() * 1000)}`;
        const index = document.querySelectorAll(".quiz-option-block").length;

        block.innerHTML = `
<label>Option ${index + 1}</label>
<input type="text" name="optionTexts[]" value="${text}" required />
<label class="quiz-file-label">
    <span class="quiz-file-label-text">${imageUrl ? imageUrl.split('/').pop() : "Choose Image"}</span>
    <input type="file" name="optionsImages" class="quiz-hidden-file option-image-input" accept="image/*" />
</label>
<img class="preview-img" style="display: ${imageUrl ? 'block' : 'none'};" src="${imageUrl || ''}" />
<button type="button" class="quiz-clear-btn" style="display: ${imageUrl ? 'inline-block' : 'none'};">âœ•</button>
<button type="button" class="quiz-option-delete-btn">âœ•</button>
`;
        initOptionBlock(block);
        document.getElementById("option-blocks").appendChild(block);
        renumberOptions();
    }

    function initExistingOptionBlocks() {
        document.querySelectorAll(".quiz-option-block").forEach(initOptionBlock);
    }

    document.getElementById("btn-add-option").addEventListener("click", () => addOptionBlock());

    ["logo", "questionImage", "questionLogo", "jackpotRewardImage", "digitalRewardImage"].forEach(name => {
        const input = document.querySelector(`input[name="${name}"]`);
        const label = input?.closest(".quiz-file-label")?.querySelector(".quiz-file-label-text");
        const img = input?.closest(".quiz-form-group")?.querySelector("img.preview-img");
        const hasImage = img?.src && !img.src.endsWith("/") && img.style.display !== "none";
        if (input && label && img) setupImagePreviewAndClear(input, img, label, null, hasImage);
    });

    initExistingOptionBlocks();

    document.getElementById("edit-question-form").addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const cleared = document.getElementById("clearedImagesInput").value
            .split(",")
            .filter(Boolean);

        const formData = new FormData();

        // Append all non-file inputs
        form.querySelectorAll("input, textarea, select").forEach(el => {
            if (el.type !== "file") {
                // Skip optionTexts[] for now (we'll handle options separately)
                if (el.name !== "optionTexts[]") formData.append(el.name, el.value);
            }
        });

        // Append main images if not cleared
        ["logo", "questionImage", "jackpotRewardImage", "digitalRewardImage"].forEach(name => {
            const input = form.querySelector(`input[name="${name}"]`);
            if (input?.files[0] && !cleared.includes(name)) {
                formData.append(name, input.files[0]);
            }
        });

        // Prepare options array and append option files
        const optionBlocks = document.querySelectorAll(".quiz-option-block");
        const optionsArray = [];

        optionBlocks.forEach(block => {
            const optionId = block.dataset.optionId;
            const textInput = block.querySelector('input[type="text"]');
            const fileInput = block.querySelector("input[type='file']");
            const img = block.querySelector("img.preview-img");

            // Determine imageName
            let imageName = "";
            if (fileInput?.files?.[0] && !cleared.includes(`optionImage-${optionId}`)) {
                formData.append("optionsImages", fileInput.files[0]);  // file
                formData.append("optionIds", optionId);                // matching id
                imageName = fileInput.files[0].name;
            } else if (!fileInput?.files?.[0] && !cleared.includes(`optionImage-${optionId}`) && img?.src && !img.src.startsWith("blob:")) {
                imageName = img.src.split("/").pop();
            }

            optionsArray.push({
                _id: optionId,   // Use this as _id so backend knows which option
                text: textInput.value.trim(),
                imageName
            });
        });

        formData.append("options", JSON.stringify(optionsArray));

        // Append cleared images as CSV
        formData.append("clearedImages", cleared.join(","));

        // Submit form
        const loader = document.getElementById("loader");
        loader.style.display = "flex";
        try {
            const response = await fetch("/tvstation/voting-question/update", {
                method: "POST",
                body: formData
            });
            const result = await response.json();
            showToast(result.message || "success");
            setTimeout(() => {
                window.location.reload();
            }, 1000);
            // Optionally show a toast here
        } catch (err) {
            console.error("Error submitting form:", err);
            console.log(err);
            showToast(result.message || "Something went wrong", "error");
        } finally {
            loader.style.display = "none";
        }
    });


    // Reward mode
    function setupRewardModeSwitcher(block) {
        const modeButtons = block.querySelectorAll(".reward-mode-btn");
        const modeInput = block.querySelector('input[name="mode"]');
        const jackpotField = block.querySelector(".reward-jackpot");
        const digitalField = block.querySelector(".reward-digital");
        const currentMode = modeInput?.value || 'jackpot';
        modeButtons.forEach(btn => {
            btn.addEventListener("click", () => {
                const mode = btn.dataset.mode;
                modeInput.value = mode;
                jackpotField.style.display = (mode === 'jackpot' || mode === 'both') ? 'block' : 'none';
                digitalField.style.display = (mode === 'digital' || mode === 'both') ? 'block' : 'none';
                modeButtons.forEach(b => b.classList.remove("active"));
                btn.classList.add("active");
            });
            if (btn.dataset.mode === currentMode) btn.classList.add("active");
        });
        jackpotField.style.display = (currentMode === 'jackpot' || currentMode === 'both') ? 'block' : 'none';
        digitalField.style.display = (currentMode === 'digital' || currentMode === 'both') ? 'block' : 'none';
    }
    document.querySelectorAll('.reward-block').forEach(setupRewardModeSwitcher);
</script>



</html>