<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Magic TV Revenue Calculator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" sizes="192x192" href="/app-icon-192.png">
    <link rel="apple-touch-icon" href="/app-icon-192.png">
    <link rel="manifest" href="/manifest.json">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />

    <style>
        :root {
            --purple-light: #caa5ff;
            --blue-light: #a3e3ff;
            --highlight-bg: #f2eaff;
            --highlight-border: #a270ff;
            --white: #fff;
            --light-bg: #fdfcff;
            --grey: #eee;
        }

        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            background: var(--light-bg);
            color: #222;
        }

        header {
            background: linear-gradient(120deg, var(--purple-light), var(--blue-light));
            text-align: center;
            padding: 2.5rem 1rem;
        }

        header h1 {
            font-size: 2rem;
            margin: 0;
            color: #fff;
        }

        main {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 1rem;
        }

        .table-wrapper {
            overflow-x: auto;
            background: var(--white);
            border-radius: 1rem;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            min-width: 900px;
        }

        th,
        td {
            padding: 1rem;
            border: 1px solid #ddd;
            text-align: center;
        }

        th {
            background: var(--highlight-border);
            color: white;
            font-weight: 600;
        }

        tfoot {
            background: var(--highlight-bg);
            font-weight: bold;
        }

        input[type="number"] {
            width: 100px;
            padding: 8px;
            border-radius: 8px;
            border: 1px solid #ccc;
            font-family: 'Poppins', sans-serif;
            text-align: right;
        }

        .output {
            font-weight: bold;
        }

        @media (max-width: 600px) {
            input[type="number"] {
                width: 80px;
            }

            header h1 {
                font-size: 1.5rem;
            }

            th,
            td {
                padding: 0.6rem;
                font-size: 0.85rem;
            }
        }

        #password-popup {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            backdrop-filter: blur(8px);
            background: rgba(255, 255, 255, 0.6);
            z-index: 9999;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .popup-content {
            background: var(--white);
            border: 2px solid var(--highlight-border);
            padding: 2rem;
            border-radius: 1rem;
            text-align: center;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
            max-width: 330px;
            width: 100%;
        }

        .popup-content h2 {
            margin-bottom: 1rem;
            color: var(--highlight-border);
        }

        .popup-content input {
            width: 100%;
            padding: 0.75rem;
            margin-bottom: 1rem;
            border-radius: 8px;
            border: 1px solid #ccc;
            font-family: 'Poppins', sans-serif;
        }

        .popup-content button {
            background: var(--highlight-border);
            color: white;
            border: none;
            padding: 0.75rem 1.2rem;
            border-radius: 8px;
            cursor: pointer;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        .popup-content button:hover {
            background: #915eff;
        }
    </style>
</head>

<body>

    <header>
        <h1>Magic TV Revenue Calculator</h1>
    </header>

    <main>
        <div class="table-wrapper">
            <table>
                <thead>
                    <tr>
                        <th>Application</th>
                        <th>Monthly Users</th>
                        <th>Conversion Rate (%)</th>
                        <th>Entry Fee (€)</th>
                        <th>Broadcaster Share (%)</th>
                        <th>Conv. Users/Month</th>
                        <th>Conv. Users/Year</th>
                        <th>Monthly Gross Revenue(€)</th>
                        <th>Monthly Broadcaster Earnings (€)</th>
                        <th>Yearly Broadcaster Earnings (€)</th>
                    </tr>
                </thead>
                <tbody id="table-body"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="5">TOTAL</td>
                        <td id="totalConvMonth" class="output"></td>
                        <td id="totalConvYear" class="output"></td>
                        <td id="totalGrossMonth" class="output"></td>
                        <td id="totalBroadMonth" class="output"></td>
                        <td id="totalBroadYear" class="output"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </main>

    <!-- Password popup -->
    <div id="password-popup">
        <div class="popup-content">
            <h2>Magic TV Revenue Model</h2>
            <input type="password" id="password-input" placeholder="Enter Password..." />
            <button onclick="checkPassword()">Unlock</button>
            <p id="error-msg" style="color: red; display: none; margin-top: 10px;">Incorrect password</p>
        </div>
    </div>

    <script>
        const apps = [
            { name: "TV Miles", users: 800000, rate: 0.10, fee: 0.5, share: 60 },
            { name: "Magic Quiz", users: 600000, rate: 0.10, fee: 0.5, share: 60 },
            { name: "Magic Votes", users: 1200000, rate: 0.02, fee: 0.5, share: 60 },
            { name: "Magic Shopping", users: 400000, rate: 0.80, fee: 1.0, share: 60 },
            { name: "Magic Brands", users: 300000, rate: 0.10, fee: 1.0, share: 60 },
            { name: "MC=50% Total", users: 1650000, rate: 2.00, fee: 29.9, share: 40 },
        ];

        // const euroFormat = new Intl.NumberFormat('de-DE', {
        //   minimumFractionDigits: 2,
        //   maximumFractionDigits: 2
        // });

        const euroFormat = new Intl.NumberFormat('en-US', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });


        // const intFormat = new Intl.NumberFormat('de-DE');

        const intFormat = new Intl.NumberFormat('en-US');


        function calculate(app) {
            const rate = app.rate / 100;
            const convMonth = app.users * rate;
            const convYear = convMonth * 12;
            const grossMonth = convMonth * app.fee;
            const broadMonth = grossMonth * (app.share / 100);
            const broadYear = broadMonth * 12;
            return { convMonth, convYear, grossMonth, broadMonth, broadYear };
        }

        function renderTable() {
            const tbody = document.getElementById("table-body");
            apps.forEach((app, i) => {
                const row = document.createElement("tr");
                row.innerHTML = `
          <td>${app.name}</td>
          <td><input type="number" value="${app.users}" data-index="${i}" data-key="users" /></td>
          <td><input type="number" step="0.01" value="${app.rate}" data-index="${i}" data-key="rate" /></td>
          <td><input type="number" value="${app.fee}" data-index="${i}" data-key="fee" /></td>
          <td><input type="number" value="${app.share}" data-index="${i}" data-key="share" /></td>
          <td class="output" id="convMonth-${i}"></td>
          <td class="output" id="convYear-${i}"></td>
          <td class="output" id="grossMonth-${i}"></td>
          <td class="output" id="broadMonth-${i}"></td>
          <td class="output" id="broadYear-${i}"></td>
        `;
                tbody.appendChild(row);
            });

            document.querySelectorAll("input").forEach(input =>
                input.addEventListener("input", handleInputChange)
            );

            updateOutputs();
        }

        function handleInputChange(e) {
            const index = +e.target.dataset.index;
            const key = e.target.dataset.key;
            apps[index][key] = parseFloat(e.target.value) || 0;
            updateOutputs();
        }

        function updateOutputs() {
            let total = { convMonth: 0, convYear: 0, grossMonth: 0, broadMonth: 0, broadYear: 0 };

            apps.forEach((app, i) => {
                const res = calculate(app);
                document.getElementById(`convMonth-${i}`).innerText = intFormat.format(res.convMonth);
                document.getElementById(`convYear-${i}`).innerText = intFormat.format(res.convYear);
                document.getElementById(`grossMonth-${i}`).innerText = "€" + euroFormat.format(res.grossMonth);
                document.getElementById(`broadMonth-${i}`).innerText = "€" + euroFormat.format(res.broadMonth);
                document.getElementById(`broadYear-${i}`).innerText = "€" + euroFormat.format(res.broadYear);

                total.convMonth += res.convMonth;
                total.convYear += res.convYear;
                total.grossMonth += res.grossMonth;
                total.broadMonth += res.broadMonth;
                total.broadYear += res.broadYear;
            });

            document.getElementById("totalConvMonth").innerText = intFormat.format(total.convMonth);
            document.getElementById("totalConvYear").innerText = intFormat.format(total.convYear);
            document.getElementById("totalGrossMonth").innerText = "€" + euroFormat.format(total.grossMonth);
            document.getElementById("totalBroadMonth").innerText = "€" + euroFormat.format(total.broadMonth);
            document.getElementById("totalBroadYear").innerText = "€" + euroFormat.format(total.broadYear);
        }

        function checkPassword() {
            const correct = "magic"; // change as needed
            const input = document.getElementById("password-input").value.trim();
            const error = document.getElementById("error-msg");
            if (input === correct) {
                document.getElementById("password-popup").style.display = "none";
                document.body.style.overflow = "auto";
            } else {
                error.style.display = "block";
            }
        }

        // Run on load
        window.addEventListener("DOMContentLoaded", () => {
            document.getElementById("password-popup").style.display = "flex";
            document.body.style.overflow = "hidden";
            renderTable();
        });
    </script>
</body>

</html>