<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Quiz Management</title>
    <link rel="stylesheet" href="/css/channel-quiz.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet" />
</head>

<body>


    <div class="quiz-admin-container">
        <% if (error) { %>
            <div class="quiz-admin-error">
                <%= error %>
            </div>
            <% } else { %>
                <div class="quiz-admin-header">
                    <h1>Quiz Manager</h1>
                    <div class="quiz-admin-controls">
                        <button onclick="window.open('/tvstation/channels/<%= channel._id %>/addquestion', '_blank')"
                            class="btn">+ Add New Question</button>
                        <button id="startChannelBtn" class="start-btn btn">
                            <%= channel.isRunning && channel.typeOfRunning==="quiz" ? "Stop" : "Start" %>
                        </button>
                        <!-- <button class="winner-btn btn">Draw Winner</button> -->
                        <button class="logs-btn btn" onclick="location.href='/tvstation/quiz-response-tracker'">Track
                            Logs</button>
                    </div>
                </div>

                <div class="quiz-admin-questions">
                    <% if (quizQuestions && quizQuestions.length> 0) { %>
                        <% quizQuestions.forEach((q, index)=> { %>
                            <div class="quiz-admin-question-card">
                                <div class="quiz-admin-question-text">
                                    <%= q.question %>
                                </div>
                                <div class="quiz-admin-info">
                                    <span>
                                        <strong>Correct Answer:</strong>
                                        <%= String.fromCharCode(65 + q.correctAnswerIndex) %>
                                    </span>
                                    <span><strong>Magic Coins Deducted:</strong>
                                        <%= q.magicCoinDeducted || 0 %>
                                    </span>
                                </div>
                                <div class="quiz-admin-actions">
                                    <a href="/tvstation/channels/<%= channel._id %>/editquestion/<%= q._id %>"
                                        target="_blank">
                                        <button>Edit</button>
                                    </a>
                                    <button class="delete-btn delete" data-question-id="<%= q._id %>">Delete</button>

                                </div>
                            </div>
                            <% }) %>
                                <% } else { %>
                                    <p style="padding: 1rem;">No quiz questions available.</p>
                                    <% } %>
                </div>
                <% if (hasMore) { %>
                    <div class="quiz-admin-load" id="loadMoreContainer">
                        <button id="loadMoreBtn">Load More</button>
                        <div id="loadingText"
                            style="display: none; text-align: center; margin-top: 10px; font-weight: 500;">
                            Loading...
                        </div>
                    </div>
                    <% } %>

                        <script>

                            let skipCount = <%= quizQuestions.length %>;
                            const channelId = "<%= channel._id %>";

                            const loadMoreBtn = document.getElementById("loadMoreBtn");
                            const loadingText = document.getElementById("loadingText");

                            if (loadMoreBtn) {
                                loadMoreBtn.addEventListener("click", async () => {
                                    try {
                                        loadMoreBtn.style.display = "none";
                                        loadingText.style.display = "block";

                                        const res = await fetch(`/tvstation/channels/${channelId}/quiz?skip=${skipCount}&limit=5`, {
                                            headers: {
                                                Accept: "application/json"
                                            }
                                        });

                                        const json = await res.json();

                                        if (json.type === "success" && Array.isArray(json.data)) {
                                            const container = document.querySelector(".quiz-admin-questions");

                                            json.data.forEach((q) => {
                                                const div = document.createElement("div");
                                                div.className = "quiz-admin-question-card";
                                                div.innerHTML = `
                            <div class="quiz-admin-question-text">${q.question}</div>
                            <div class="quiz-admin-info">
                                <span><strong>Correct Answer:</strong> ${String.fromCharCode(65 + q.correctAnswerIndex)}</span>
                                <span><strong>Magic Coins:</strong> ${q.rewardCoins || 0}</span>
                            </div>
                            <div class="quiz-admin-actions">
                               <a href="/tvstation/channels/${channelId}/editquestion/${q._id}" target="_blank">
                                    <button>Edit</button>
                                </a>
                               <button class="delete-btn delete" data-question-id="${q._id}">Delete</button>
                            </div>
                        `;
                                                container.appendChild(div);
                                            });

                                            skipCount += json.data.length;

                                            if (!json.hasMore || json.data.length < 5) {
                                                document.getElementById("loadMoreContainer").style.display = "none";
                                            } else {
                                                loadMoreBtn.style.display = "inline-block";
                                            }
                                        }
                                    } catch (err) {
                                        console.error("Load more failed", err);
                                        alert("Failed to load more questions.");
                                        loadMoreBtn.style.display = "inline-block";
                                    } finally {
                                        loadingText.style.display = "none";
                                    }
                                });
                            }


                            document.addEventListener("click", async (e) => {
                                if (e.target.classList.contains("delete-btn")) {
                                    const button = e.target;
                                    const questionId = button.getAttribute("data-question-id");

                                    if (!confirm("Are you sure you want to delete this question?")) return;

                                    try {
                                        const res = await fetch(`/tvstation/quiz-question/${questionId}`, {
                                            method: "DELETE",
                                            headers: {
                                                "Content-Type": "application/json"
                                            },
                                            body: JSON.stringify({
                                                channelId: "<%= channel._id %>"
                                            })
                                        });

                                        const result = await res.json();

                                        if (result.type === "success") {
                                            showToast(result.message || "Question deleted successfully", "success");
                                            setTimeout(() => {
                                                location.reload();
                                            }, 1000); // Reload after 1 second

                                        } else {
                                            showToast(result.message || "Failed to delete the question", "error");
                                        }
                                    } catch (err) {
                                        console.error("Delete failed", err);
                                        showToast("Server error while deleting the question", "error");
                                    }
                                }
                            });
                        </script>
                        <% } %>



    </div>

    <script>
        document.getElementById("startChannelBtn")?.addEventListener("click", async () => {
            const pathParts = window.location.pathname.split("/");
            const channelId = pathParts[pathParts.indexOf("channels") + 1]; // Gets channel ID from URL

            if (!channelId) {
                showToast("Channel ID not found", "error");
                return;
            }

            const loader = document.getElementById("loader");
            loader.style.display = "flex"; // show loader

            try {
                const res = await fetch(`/tvstation/channels/${channelId}/toggle`, {
                    method: "PATCH",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        isRunning: true,
                        typeOfRunning: "quiz"
                    })
                });

                const result = await res.json();

                if (result.type === "success") {
                    showToast(result.message || "Channel started", "success");
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showToast(result.message || "Failed to start channel", "error");
                }
            } catch (err) {
                console.error("Start error", err);
                showToast("Server error while starting channel", "error");
            }
            finally {
                loader.style.display = "none"; // hide loader after fetch is done
            }
        });
    </script>




</body>

</html>