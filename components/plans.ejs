<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Subscription Plans</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="/css/plans.css" rel="stylesheet">
</head>

<body>

    <div class="container" style="margin-top: 10px;">
        <!-- <h1>Choose Your Subscription</h1> -->
        <% if (needsCurrencySelection) { %>
            <div style="display:flex; justify-content: end;">
                <select id="currencySwitcherApp" class="language-selector-select active"
                    style="width: 100%; max-width: 280px; margin: 10px 0px;">
                    <option value="EUR" <%=activeCurrency==='EUR' ? 'selected' : '' %>>EUR</option>
                    <option value="CHF" <%=activeCurrency==='CHF' ? 'selected' : '' %>>CHF</option>
                    <option value="HUF" <%=activeCurrency==='HUF' ? 'selected' : '' %>>HUF</option>
                </select>
            </div>
            <% } %>

                <div class="tabs">
                    <% if (user?.subscription?.isVip) { %>
                        <div class="tab active" id="current-subscription-tab"
                            style="display: flex; align-items: center; gap: 5px;"><img class="logo" alt="Logo"
                                src="/Vip.png">VIP
                            Subscription</div>
                        <% } else { %>
                            <div class="tab active" id="plans-tab" data-translate="subscription_plans">Subscription
                                Plans
                            </div>
                            <div class="tab" id="current-subscription-tab" data-translate="current_subscription"
                                style="display: none;">Current
                                Subscription</div>
                            <% } %>
                </div>


                <!-- 🔹 If user is VIP -->
                <% if (user?.subscription?.isVip) { %>
                    <div class="tab-content active" id="current-subscription-tab-content">
                        <div class="subscription-card">
                            <div class="status-badge active">VIP Subscription</div>
                            <div class="subscription-details">
                                <p><i class="fas fa-user"></i> <strong>Name :&nbsp;</strong>
                                    <%= user.name %>
                                </p>
                                <p><i class="fas fa-envelope"></i> <strong>Email :&nbsp;</strong>
                                    <%= user.email %>
                                </p>
                                <p><i class="fas fa-calendar-alt"></i> <strong>Valid Until&nbsp;:&nbsp;</strong>
                                    <% if (user.subscription.validTill) { const vipDate=new
                                        Date(user.subscription.validTill); const
                                        dd=String(vipDate.getDate()).padStart(2, '0' ); const
                                        mm=String(vipDate.getMonth() + 1).padStart(2, '0' ); const
                                        yy=vipDate.getFullYear(); %>
                                        <%= `${dd}-${mm}-${yy}` %>
                                            <% } else { %> N/A <% } %>
                                </p>
                            </div>
                        </div>
                    </div>

                    <% } else { %>
                        <!-- 🔹 Non-VIP User: show Plans + Normal Subscription Card -->
                        <div class="tab-content active" id="plans-tab-content">
                            <div class="plans">
                                <% const userCurrency=user?.userPreferences?.currency || activeCurrency || "EUR" ; %>
                                    <% plans.filter(p=> p.recurring).forEach(plan => {
                                        const sanitizedId = plan.encryptedId.replace(/[^a-zA-Z0-9-_]/g, "");
                                        const priceObj = plan.prices.find(p => p.currency === userCurrency) ||
                                        plan.prices[0];
                                        %>
                                        <div class="plan-card">
                                            <div class="plan-duration">
                                                <%= plan.publicName %>
                                            </div>
                                            <div class="plan-price" id="plan-price-<%= sanitizedId %>">
                                                <%= priceObj.amount %>
                                                    <%= priceObj.currency %>
                                            </div>

                                            <ul class="features">
                                                <% plan.features.forEach(feature=> { %>
                                                    <li>
                                                        <%= feature %>
                                                    </li>
                                                    <% }); %>
                                            </ul>

                                            <% if (needsCurrencySelection) { %>
                                                <button id="lock-curreny-button-<%= plan.encryptedId %>"
                                                    class="lock-curreny-button subscribe-btn"
                                                    onClick="showCurrencyPopup('<%= plan.encryptedId %>')">
                                                    Proceed to pay
                                                </button>
                                                <% } %>

                                                    <div id="paypal-button-container-<%= sanitizedId %>"
                                                        class="paypal-button-container"
                                                        style="margin-top: 20px; <%= needsCurrencySelection ? 'display:none;' : 'display:block;' %>"
                                                        data-plan-id="<%= plan.encryptedId %>">
                                                    </div>
                                        </div>
                                        <% }); %>
                            </div>

                            <!-- 🔹 Non-VIP Subscription Card -->
                            <div style="display: flex; justify-content: center; margin-top: 20px;">
                                <div class="tab" id="show-current-subscription-btn"
                                    data-translate="current_subscription">
                                    Current
                                    Subscription</div>
                            </div>
                            <div class="subscription-card" style="display: none;">
                                <% if (!user.validUntil || new Date(user.validUntil) < new Date()) { %>
                                    <div class="status-badge expired">No Active Subscription</div>
                                    <p class="no-subscription-message">Subscribe now to enjoy premium features.</p>
                                    <% } else { %>
                                        <div class="status-badge active" data-translate="active_subscription">Active
                                            Subscription</div>
                                        <div class="subscription-details">
                                            <p><i class="fas fa-user"></i> <strong>Name:&nbsp;</strong>
                                                <%= user.name %>
                                            </p>
                                            <p><i class="fas fa-envelope"></i> <strong>Email:&nbsp;</strong>
                                                <%= user.email %>
                                            </p>
                                            <p><i class="fas fa-calendar-alt"></i> <strong>Valid Until:&nbsp;</strong>
                                                <% const date=new Date(user.validUntil); const
                                                    dd=String(date.getDate()).padStart(2, '0' ); const
                                                    mm=String(date.getMonth() + 1).padStart(2, '0' ); const
                                                    yy=date.getFullYear(); %>
                                                    <%= `${dd}-${mm}-${yy}` %>
                                            </p>
                                            <p><i class="fas fa-clock"></i> <strong>Time Remaining:&nbsp;</strong>
                                                <span id="time-remaining">Loading...</span>
                                            </p>
                                        </div>
                                        <% } %>
                            </div>
                        </div>
                        <% } %>
    </div>



</body>

<!-- Scripts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
<script src="/js/toastify-setup.js"></script>
<script src="https://js.stripe.com/v3/"></script>
<script src="https://www.paypal.com/sdk/js?client-id=<%= paypalClientId %>&vault=true&intent=subscription"></script>
<script src=" /js/plan.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const containers = document.querySelectorAll(".paypal-button-container");

        // Initialize global meta token storage
        window.paypalMetaTokens = window.paypalMetaTokens || {};

        containers.forEach(container => {
            console.log(container)
            const planId = container.dataset.planId;
            const sanitizedId = container.id.replace("paypal-button-container-", "");
            const couponInput = document.querySelector(`#coupon-code-${sanitizedId}`);

            paypal.Buttons({
                createSubscription: function () {  // ⚡ For recurring subscriptions
                    const couponCode = couponInput ? couponInput.value.trim() : "";
                    // Grab selected currency from the dropdown
                    const currencySelect = document.getElementById("currencySwitcherApp");
                    const selectedCurrency = currencySelect ? currencySelect.value : '<%= activeCurrency %>'; // fallback to server value
                    return fetch("/paypal/create-subscription", {  // endpoint for recurring
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ planId, couponCode, currency: selectedCurrency })
                    })
                        .then(async res => {
                            if (!res.ok) {
                                const errorData = await res.json();
                                throw new Error(errorData.message || "Failed to create subscription");
                            }
                            return res.json();
                        })
                        .then(data => {
                            if (data.message) {
                                showToast(data.message, "success");
                                if (couponInput) couponInput.value = ""; // Clear input
                            }
                            if (data.id && data.metaToken) {
                                window.paypalMetaTokens[data.id] = data.metaToken;
                            }
                            return data.id;
                        })
                        .catch(err => {
                            console.error("Create Subscription Error:", err);
                            showToast(err.message || "An error occurred while creating subscription", "error");
                            if (couponInput) couponInput.value = "";
                            throw err;
                        });
                },
                onApprove: function (data) {
                    const metaToken = window.paypalMetaTokens[data.subscriptionID];
                    return fetch("/paypal/capture-subscription", { // endpoint for capturing recurring
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ subscriptionID: data.subscriptionID, planId, metaToken })
                    })
                        .then(res => res.json())
                        .then(response => {
                            delete window.paypalMetaTokens[data.subscriptionID];
                            if (response.status === 'ACTIVE' || response.status === 'APPROVED') {
                                if (response.subscriptionId) {
                                    if (couponInput) couponInput.value = "";
                                    window.location.href = `/successpayment?session_id=${response.subscriptionId}`;
                                } else {
                                    alert("Transaction ID not found.");
                                }
                            } else {
                                showToast(response.message, "error");
                                setTimeout(() => window.location.href = `/cancel`, 1000);
                            }
                        });
                },
                onError: function (err) {
                    console.error("PayPal Subscription Error:", err.message);
                    showToast("An error occurred during the transaction.", "error");
                }
            }).render(container);
        });
    });
</script>


<script>// Update remaining time
    function formatTime(milliseconds) {
        let seconds = Math.floor(milliseconds / 1000);
        let minutes = Math.floor(seconds / 60);
        let hours = Math.floor(minutes / 60);
        let days = Math.floor(hours / 24);

        seconds %= 60;
        minutes %= 60;
        hours %= 24;

        let timeString = "";
        if (days > 0) timeString += `${days} days `;
        if (hours > 0) timeString += `${hours} hours `;
        if (minutes > 0) timeString += `${minutes} minutes `;
        if (seconds > 0) timeString += `${seconds} seconds`;
        return timeString;
    }

    function updateTimeRemaining() {
        const validUntil = new Date("<%= user.validUntil %>");
        const now = new Date();
        const timeRemaining = validUntil - now;

        if (timeRemaining <= 0) {
            document.getElementById("time-remaining").textContent =
                "Subscription expired";
        } else {
            document.getElementById("time-remaining").textContent =
                formatTime(timeRemaining);
        }
    }

    setInterval(updateTimeRemaining, 1000);
    const currentSubBtn = document.querySelector("#show-current-subscription-btn");
    const subCard = document.querySelector(".subscription-card");

    if (currentSubBtn && subCard) {
        currentSubBtn.addEventListener("click", function () {
            if (subCard.style.display === "none" || subCard.style.display === "") {
                subCard.style.display = "block";
                subCard.scrollIntoView({ behavior: "smooth", block: "start" });
            }
        });
    }
</script>
<script>
    document.getElementById("currencySwitcherApp").addEventListener("change", function () {
        const url = new URL(window.location);
        url.searchParams.set("currency", this.value);
        window.location = url;
    });
    function showCurrencyPopup(planId) {
        const popup = document.getElementById("theme-popup-select-currency");
        const okBtn = document.getElementById("popup-ok-btn-select-currency");
        const cancelBtn = document.getElementById("popup-cancel-btn-select-currency");
        const currencySelect = document.getElementById("currencySwitcherApp"); // the select
        const currencyValue = document.getElementById("currency-value"); // the select
        const loader = document.getElementById("loader");
        currencyValue.value = currencySelect.value
        popup.style.display = "flex";

        const cleanup = () => {
            popup.style.display = "none";
            okBtn.onclick = null;
            cancelBtn.onclick = null;
        };

        okBtn.onclick = async (e) => {
            e.preventDefault();

            const selectedCurrency = currencyValue.value;

            // Frontend mandatory check
            if (!selectedCurrency) {
                return showToast("Please select a currency!", "error");
            }

            loader.style.display = "flex"; // show loader

            try {
                // 1️⃣ Call backend to set currency
                const res = await fetch("/set-currency", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ currency: selectedCurrency })
                });
                const data = await res.json();

                if (!res.ok) {
                    return showToast(data.message || "Failed to set currency", "error");
                }

                showToast(data.message || "Currency set successfully", "success");

                // 🔁 Reload page after 1 second
                setTimeout(() => {
                    window.location.reload();
                }, 1000);


                currencySelect.style.display = "none";

                cleanup(); // hide popup

            } catch (err) {
                console.error("Error setting currency:", err);
                showToast("Internal error. Please try again.", "error");
            } finally {
                loader.style.display = "none"; // hide loader
            }
        };

        cancelBtn.onclick = (e) => {
            e.preventDefault();
            cleanup();
            // ❌ Cancelled, do nothing
        };
    }
</script>


</html>