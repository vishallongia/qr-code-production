<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Navbar</title>
    <!-- Standard favicon -->
    <link rel="icon" type="image/png" sizes="192x192" href="/app-icon-192.png">

    <!-- Apple Touch Icon (for iOS home screen) -->
    <link rel="apple-touch-icon" href="/app-icon-192.png">

    <!-- Android Chrome Web App Manifest (optional but useful for PWAs) -->
    <link rel="manifest" href="/manifest.json">
    <!-- Link Bootstrap CSS -->
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .custom-btn {
            border: 2px solid #18024b;
            color: #18024b;
            margin-left: 10px;
        }

        .custom-btn:hover {
            background-color: #18024b;
            color: white;
        }

        #searchBar {
            display: none;
            width: 100%;
            margin-top: 10px;
        }

        #searchBar.active {
            display: block;
        }

        @media (min-width: 769px) {
            #searchBar {
                position: absolute;
                right: 80px;
                top: 50%;
                transform: translateY(-78%);
                max-width: 0;
                overflow: hidden;
                opacity: 0;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                background: white;
                border-radius: 4px;
                z-index: 10;
            }

            #searchBar.active {
                max-width: 250px;
                padding-left: 10px;
                opacity: 1;
            }
        }

        @media (max-width: 768px) {
            .search-bar-main-div {
                display: flex;
                gap: 10px;
                flex-flow: column;
                width: 100%;
            }
        }

        /* Fullscreen Loader Styling */
        .fullscreen-loader {
            display: none;
            /* Initially hidden */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            /* Semi-transparent background */
            z-index: 9999;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            color: white;
            font-size: 18px;
            font-weight: bold;
        }

        /* Spinning Loader */
        .loader {
            width: 50px;
            height: 50px;
            border: 5px solid #ccc;
            border-top: 5px solid #ffffff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 10px;
        }

        /* Loader Animation */
        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        /* Animated "Please wait..." text */
        .animated-text {
            display: flex;
            font-size: 18px;
            letter-spacing: 1px;
        }

        .animated-text span {
            animation: blink 1.5s infinite;
            font-size: 20px;
            font-weight: bold;
        }

        /* Create a blinking effect for each dot */
        .animated-text span:nth-child(1) {
            animation-delay: 0s;
        }

        .animated-text span:nth-child(2) {
            animation-delay: 0.3s;
        }

        .animated-text span:nth-child(3) {
            animation-delay: 0.6s;
        }

        @keyframes blink {
            0% {
                opacity: 0;
            }

            50% {
                opacity: 1;
            }

            100% {
                opacity: 0;
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body>
    <div class="fullscreen-loader">
        <div class="loader"></div>
        <p class="animated-text">Please wait<span>.</span><span>.</span><span>.</span></p>
    </div>
    <nav class="navbar navbar-expand-lg navbar-light bg-body-tertiary position-relative">
        <div class="container-fluid">
            <a class="navbar-brand" href="/admindashboard">Admin</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
                aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                <div class="navbar-nav nav-items-group">
                    <a class="nav-link" href="/admindashboard/generateusers">Create Analog MC</a>
                    <a class="nav-link" href="/admindashboard/demo-user-dashboard">Analog MC</a>

                    <!-- Affiliate Options Dropdown -->
                    <div class="nav-item dropdown">
                        <a class="nav-link d-flex align-items-center gap-1" href="#" id="affiliateDropdown"
                            role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <span>Affiliate Options</span>
                            <i class="fa-solid fa-caret-down"></i>
                            <span class="badge bg-danger rounded-pill d-none notification-badge"
                                data-type="affiliate">0</span>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="affiliateDropdown">
                            <li><a class="dropdown-item" href="/admindashboard/affiliate/affiliate-users">
                                    Affiliate Users</a></li>
                            <li><a class="dropdown-item" href="/admindashboard/affiliate/create-affiliate-user">Create
                                    Affiliate User</a></li>
                            <li><a class="dropdown-item" href="/admindashboard/user-requests?type=affiliate">Affiliate
                                    Partner
                                    Users Requests <span class="badge bg-danger rounded-pill d-none notification-badge"
                                        data-type="affiliate">0</span></a></li>
                        </ul>
                    </div>

                    <a class="nav-link" href="/admindashboard/vip-users">Vip Users</a>
                    <!-- Tv Station Dropdown -->
                    <div class="nav-item dropdown">
                        <a class="nav-link d-flex align-items-center gap-1" href="#" id="tvstationDropdown"
                            role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <span>Media Partner</span>
                            <i class="fa-solid fa-caret-down"></i>
                            <!-- Outer badge: sum -->
                            <span class="badge bg-danger rounded-pill d-none notification-badge"
                                data-type="tvstation-sum">0</span>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="tvstationDropdown">
                            <li>
                                <a class="dropdown-item" href="/admindashboard/tvstation/tvstation-users">
                                    Media Partner Users
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="/admindashboard/tvstation/requests">
                                    Winner Requests
                                    <span class="badge bg-danger rounded-pill d-none notification-badge"
                                        data-type="winnerRequests">0</span>
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="/admindashboard/user-requests?type=tvstation">
                                    Media Partner Users Requests
                                    <span class="badge bg-danger rounded-pill d-none notification-badge"
                                        data-type="tvstationRequests">0</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <a class="nav-link" href="/admindashboard/scanner">Scanner</a>
                </div>

                <div class="d-flex flex-column flex-md-row ms-auto gap-2 align-items-start align-items-md-center">
                    <!-- Auth buttons -->
                    <div id="authButtons" class="d-flex flex-column flex-md-row gap-2 w-100">
                        <button class="btn custom-btn" onclick="handleProfileUpdate()">
                            <i class="fa-solid fa-user"></i> Update My Profile
                        </button>
                        <button class="btn custom-btn" onclick="return handleLogout(event)">
                            <i class="fa-solid fa-right-from-bracket"></i> Log Out
                        </button>

                    </div>
                    <!-- Search Icon -->
                    <div class="search-bar-main-div">
                        <!-- Inline Search Bar (absolute positioned) -->
                        <div id="searchBar">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search..." id="searchInputGlobal">
                                <button class="btn btn-outline-secondary" id="closeSearch">
                                    <i class="fa-solid fa-xmark"></i>
                                </button>
                            </div>
                        </div>
                        <button class="btn custom-btn search-btn" style="margin: 0px;" id="openSearch">
                            <i class="fa-solid fa-magnifying-glass"></i>
                        </button>
                    </div>
                </div>
            </div>
    </nav>



    <!-- Scripts -->
    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="/js/logout.js"></script>
    <script>
        const openSearchBtn = document.getElementById("openSearch");
        const closeSearchBtn = document.getElementById("closeSearch");
        const searchBar = document.getElementById("searchBar");
        const authButtons = document.getElementById("authButtons");
        const searchInputGlobal = document.getElementById("searchInputGlobal");

        openSearchBtn.addEventListener("click", () => {
            searchBar.classList.add("active");
            authButtons.classList.add("d-none");
            searchInputGlobal.focus();
        });

        closeSearchBtn.addEventListener("click", () => {
            searchBar.classList.remove("active");
            authButtons.classList.remove("d-none");
            searchInputGlobal.value = ""; // Optional: clear search input
        });

        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
                searchBar.classList.remove("active");
                authButtons.classList.remove("d-none");
            }
        });

        // 👇 Hide search bar when input loses focus
        searchInputGlobal.addEventListener("blur", () => {
            // Delay is needed to prevent conflict with clicking the close button
            setTimeout(() => {
                if (!searchBar.contains(document.activeElement)) {
                    searchBar.classList.remove("active");
                    authButtons.classList.remove("d-none");
                }
            }, 150);
        });

        searchInputGlobal.addEventListener("keydown", function (e) {
            console.log(e.key)
            if (e.key === "Enter") {
                e.preventDefault();
                const query = searchInputGlobal.value.trim();
                if (query) {
                    window.location.href = `/admindashboard/search-users?search=${encodeURIComponent(query)}`;
                }
            }
        });

        if (openSearchBtn) {
            openSearchBtn.addEventListener("click", () => {
                const query = searchInputGlobal.value.trim();

                // If input is already visible and has value, redirect
                if (searchBar.classList.contains("active") && query !== "") {
                    window.location.href = `/admindashboard/search-users?search=${encodeURIComponent(query)}`;
                } else {
                    searchBar.classList.add("active");
                    authButtons.classList.add("d-none");
                    searchInputGlobal.focus();
                }
            });
        }

        function handleProfileUpdate() {
            window.location.href = "/myprofile";
        }

        async function loadNotificationBadges() {
            try {
                const res = await fetch("/admindashboard/notifications");
                const data = await res.json();

                // Save counts to localStorage
                localStorage.setItem('notificationCounts', JSON.stringify(data));

                updateBadges(data);
            } catch (err) {
                console.error("Failed to load badges:", err);
            }
        }

        function updateBadges(data) {
            document.querySelectorAll(".notification-badge").forEach(badge => {
                const type = badge.dataset.type;
                let count = 0;

                switch (type) {
                    case "tvstation-sum":
                        count = (data.mediaPartner || 0) + (data.winnerRequests || 0);
                        break;
                    case "winnerRequests":
                        count = data.winnerRequests || 0;
                        break;
                    case "tvstationRequests":
                        count = data.mediaPartner || 0;
                        break;
                    case "affiliate":
                        count = data.affiliate || 0;
                }

                badge.textContent = count;
                badge.classList.toggle("d-none", count === 0);
            });
        }

        // Show cached badges immediately
        const cachedData = JSON.parse(localStorage.getItem('notificationCounts') || '{}');
        updateBadges(cachedData);

        // Then fetch fresh counts
        loadNotificationBadges();
        setInterval(loadNotificationBadges, 30000);


    </script>

</body>

</html>